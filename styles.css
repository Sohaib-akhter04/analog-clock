@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@1,300&family=Rubik+Vinyl&display=swap');
*{
    margin:0;
    padding: 0;
}
body{
    font-family: 'Poppins', sans-serif;
    background: rgb(238,174,202);
    background: radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);
    position: relative; 
    /* In CSS, the position: relative property/value pair is used to position an element relative to its normal position within the document flow. When you apply position: relative to an element, it creates a new positioning context for that element, and you can use additional positioning properties to adjust its position. */
    display: flex;
    justify-content: center;
    /* The CSS property justify-content: center; is used to horizontally align the content within a flex container. It is specifically applied to flex containers using the Flexbox layout model.*/
    align-items: center;
    height: 100vh;
}
.clock{
    background-color: rgb(49,49,47);
    width: 300px;
    height: 300px;
    border-radius: 50%; /*for creating a circle*/
    color: #fff;
    border: 5px solid #fff;
    box-shadow: 0px 0px 10px rgba(255,255,255,0.7),0px 0px 20px rgba(0,0,0,0.7);
    /* In this example, there are two shadow effects specified, separated by a comma. Here's what each part represents:
    0px 0px 10px rgba(255, 255, 255, 0.7): This is the first shadow effect. It has the following components:
    0px 0px: The horizontal and vertical offsets of the shadow. In this case, both offsets are set to 0px, meaning the shadow is centered on the element.
    10px: The blur radius of the shadow. It determines the amount of blurring applied to the shadow. In this case, it is set to 10px, creating a relatively soft or blurred shadow effect.
    rgba(255, 255, 255, 0.7): The color and transparency of the shadow. Here, it specifies a white color with an opacity of 0.7, meaning it is slightly transparent */
    font-size: 26px;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}
.clock ul li{
    list-style: none;
    position: absolute;
    text-align: center;
    transform: rotate(calc(30deg*var(--i)));
    inset:5px;
}
.clock ul li span{
    transform: rotate(calc(-30deg*var(--i)));
    display: inline-block;
}
.clock:after{
    content: '';
    width:10px;
    height: 10px;
    background-color: #fff;
    border-radius: 50%;
    position: absolute;
}
.needle{
    display: flex;
    justify-content: center;
    align-items:flex-end ;
}
.needle span{
    width:5px;
    height:var(--h);
    background-color: var(--clr);
    position: absolute;
    border-radius: 5px;
}